" avoid ESC timeout https://github.com/mintty/mintty/wiki/Tips#avoiding-escape-timeout-issues-in-vim 
let &t_ti.="\e[?7727h"
let &t_te.="\e[?7727l"
noremap <Esc>O[ <Esc>
noremap! <Esc>O[ <Esc>

"fu GetTerm()
    "terminal
    "wincmd x
    "res 40
"endfu

"au GetTerm() "Automatically launch terminal

" <Leader>
nnoremap <Space> <nop>
let mapleader = " "
nnoremap <Leader>w :w<CR>

".vimrc
nnoremap <Leader>ve :e $MYVIMRC<CR>
nnoremap <Leader>vr :source $MYVIMRC<CR>

set encoding=utf-8
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
syntax on

"---------------------
" Basic editing config
"---------------------
set shortmess+=I " disable startup message
set incsearch " incremental search (as string is being typed)
set hls " highlight search
set listchars=tab:>>,nbsp:~ " set list to see tabs and non-breakable spaces
set lbr " line break
set scrolloff=5 " show lines above and below cursor (when possible)
set noshowmode " hide mode
set laststatus=2
set backspace=indent,eol,start " allow backspacing over everything
set timeout timeoutlen=1000 ttimeoutlen=100 " fix slow O inserts
set lazyredraw " skip redrawing screen in some cases
set autochdir " automatically set current directory to directory of last opened file
set hidden " allow auto-hiding of edited buffers
set history=8192 " more history
set nojoinspaces " suppress inserting two spaces between sentences
" use 4 spaces instead of tabs during formatting
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
" smart case-sensitive search
set ignorecase
set smartcase

"Move visually selected lines up or down in various modes
nnoremap K :m .-2<CR>==
nnoremap J :m .+1<CR>==
vnoremap K :m '<-2<CR>gv=gv
vnoremap J :m '>+1<CR>gv=gv

" Nummern
highlight CursorLineNr ctermfg=226
set number relativenumber
set cursorline

" Buffer
nnoremap <leader>b :Buffers<CR>
nmap <leader>l :set list!<CR>
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>

" EOL, CR
set listchars=tab:▸\ ,eol:¬
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#4a4a59 

" Zeilenumbruch
set breakindent
set showbreak=...

" Fuzzy Finder
let $FZF_DEFAULT_COMMAND = 'ag -g "" --hidden'
nnoremap <leader>o :Files<CR>

" NERDTree
map <leader>n :NERDTreeToggle<CR>
" How can I open a NERDTree automatically when vim starts up if no files were specified?
" autocmd StdinReadPre * let s:std_in=1
" autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" How can I close vim if the only window left open is a NERDTree?
" autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
"<C-w><C-h>  
"<C-w><C-j>  
"<C-w><C-k>  
"<C-w><C-l>  
"nnoremap <C-J> <C-W><C-J>
"nnoremap <C-K> <C-W><C-K>
"nnoremap <C-L> <C-W><C-L>
"nnoremap <C-H> <C-W><C-H>

" vim.plug
call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/goyo.vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'franbach/miramare'
Plug 'chriskempson/base16-vim'
Plug 'preservim/nerdcommenter'
Plug 'pprovost/vim-ps1'
" Plug 'jiangmiao/auto-pairs'

call plug#end()

set termguicolors
" .vimrc_background generated by base16-shell
if filereadable(expand("~/.vimrc_background"))
  let base16colorspace=256
  source ~/.vimrc_background
endif

" save read-only files
command -nargs=0 Sudow w !sudo tee % >/dev/null
